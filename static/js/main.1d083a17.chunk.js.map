{"version":3,"sources":["BooksAPI.js","components/Book.js","utils/debounce.js","components/SearchBooks.js","components/BookShelf.js","components/MyReads.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","get","bookId","fetch","concat","then","res","json","data","book","update","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","books","Book","_ref","updateBook","title","authors","imageLinks","updateStatus","_ref3","asyncToGenerator","regenerator_default","a","mark","_callee","_ref2","target","wrap","_context","prev","next","value","abrupt","stop","this","_x","apply","arguments","react_default","createElement","className","style","width","height","backgroundImage","smallThumbnail","textAlign","paddingTop","onChange","disabled","length","join","debounce","fn","delay","timer","_len","args","Array","_key","context","clearTimeout","setTimeout","SearchBooks","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addShelfInfo","results","idBooks","map","result","directSearch","setState","isArray","handleChange","firstLetter","state","debouncedSearch","updateHandler","newShelf","oldShelf","bind","assertThisInitialized","_this2","_this$state","react_router_dom","to","type","placeholder","Book_Book","key","Component","BookShelf","MyReads","currentlyReading","wantToRead","read","BookShelf_BookShelf","BooksApp","newBook","newIdBooks","sent","undefined","defineProperty","filter","item","_ref4","toConsumableArray","shelfs","forEach","push","react_router","exact","path","render","MyReads_MyReads","SearchBooks_SearchBooks","ReactDOM","basePath","process","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1d083a17.chunk.js","sourcesContent":["const api = 'https://reactnd-books-api.udacity.com';\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token)\n  token = localStorage.token = Math.random()\n    .toString(36)\n    .substr(-8);\n\nconst headers = {\n  Accept: 'application/json',\n  Authorization: token\n};\n\nexport const get = bookId =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json());\n\nexport const search = query =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(res => res.json())\n    .then(data => data.books);\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nexport const Book = ({ book, updateBook }) => {\n  const { title, authors, imageLinks, shelf } = book;\n\n  const updateStatus = async ({ target }) => {\n    if (book.shelf === target.value) return;\n    updateBook(book, target.value, book.shelf);\n  };\n\n  return (\n    <li>\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div\n            className=\"book-cover\"\n            style={{\n              width: 128,\n              height: 193,\n              backgroundImage: `url(${\n                imageLinks ? imageLinks.smallThumbnail : ''\n              })`,\n              textAlign: 'center',\n              paddingTop: 65,\n            }}\n          >\n            {!imageLinks && 'No Cover available'}\n          </div>\n          <div className=\"book-shelf-changer\">\n            <select onChange={updateStatus} value={shelf || 'none'}>\n              <option value=\"move\" disabled>\n                Move to...\n              </option>\n              <option value=\"currentlyReading\">Currently Reading</option>\n              <option value=\"wantToRead\">Want to Read</option>\n              <option value=\"read\">Read</option>\n              <option value=\"none\">None</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"book-title\">{title}</div>\n        <div className=\"book-authors\">\n          {authors && authors.length && authors.join(', ')}\n        </div>\n      </div>\n    </li>\n  );\n};\n\nBook.propTypes = {\n  book: PropTypes.object,\n  updateBook: PropTypes.func,\n};\n","export const debounce = (fn, delay) => {\n  let timer = null;\n  return function (...args) {\n    const context = this;\n    timer && clearTimeout(timer);\n    timer = setTimeout(() => {\n      fn.apply(context, args);\n    }, delay);\n  };\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { search } from '../BooksAPI';\nimport { Book } from './Book';\nimport { debounce } from '../utils/debounce';\n\nclass SearchBooks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      results: [],\n    };\n    this.debouncedSearch = debounce(this.directSearch, 200);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  addShelfInfo = (results) => {\n    const { idBooks } = this.props;\n    return results.map((result) => {\n      const book = idBooks[result.id];\n      return book ? book : result;\n    });\n  };\n\n  directSearch = (query) => {\n    if (query === '') {\n      this.setState({ results: [] });\n    } else {\n      search(query).then((results) =>\n        this.setState({\n          results: Array.isArray(results) ? this.addShelfInfo(results) : [],\n        })\n      );\n    }\n  };\n\n  handleChange = ({ target }) => {\n    const firstLetter = this.state.query === '';\n    this.setState({ query: target.value });\n    firstLetter\n      ? this.directSearch(target.value)\n      : this.debouncedSearch(target.value);\n  };\n\n  updateHandler = (book, newShelf, oldShelf) => {\n    this.setState(({ results }) => ({\n      results: results.map((result) =>\n        result.id === book.id ? { ...book, shelf: newShelf } : result\n      ),\n    }));\n    this.props.updateBook(book, newShelf, oldShelf);\n  };\n\n  render() {\n    const { query, results } = this.state;\n\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link to=\"/\" className=\"close-search\">\n            Close\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n            <input\n              type=\"text\"\n              value={query}\n              onChange={this.handleChange}\n              placeholder=\"Search by title or author\"\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n            {results.map((book) => (\n              <Book key={book.id} book={book} updateBook={this.updateHandler} />\n            ))}\n          </ol>\n          {!!query && !!results && (\n            <span>No results found. Please try a different query.</span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchBooks.propTypes = {\n  idBooks: PropTypes.object,\n  updateBook: PropTypes.func,\n};\n\nexport { SearchBooks };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Book } from './Book';\n\nexport const BookShelf = ({ title, books, updateBook }) => (\n  <div className=\"bookshelf\">\n    <h2 className=\"bookshelf-title\">{title}</h2>\n    <div className=\"bookshelf-books\">\n      <ol className=\"books-grid\">\n        {books.map((book) => (\n          <Book book={book} key={book.id} updateBook={updateBook} />\n        ))}\n      </ol>\n    </div>\n  </div>\n);\n\nBookShelf.propTypes = {\n  books: PropTypes.array,\n  title: PropTypes.string,\n  updateBook: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { BookShelf } from './BookShelf';\n\nconst MyReads = ({ currentlyReading, wantToRead, read, updateBook }) => (\n  <div className=\"list-books\">\n    <div className=\"list-books-title\">\n      <h1>MyReads</h1>\n    </div>\n    <div className=\"list-books-content\">\n      <div>\n        <BookShelf\n          title=\"Currently Reading\"\n          books={currentlyReading}\n          updateBook={updateBook}\n        />\n        <BookShelf\n          title=\"Want to Read\"\n          books={wantToRead}\n          updateBook={updateBook}\n        />\n        <BookShelf title=\"Read\" books={read} updateBook={updateBook} />\n      </div>\n    </div>\n    <Link to=\"/search\" className=\"open-search\">\n      <button>Add a book</button>\n    </Link>\n  </div>\n);\n\nMyReads.propTypes = {\n  currentlyReading: PropTypes.array,\n  read: PropTypes.array,\n  wantToRead: PropTypes.array,\n  updateBook: PropTypes.func,\n};\n\nexport { MyReads };\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { getAll, update, get } from './BooksAPI';\nimport { SearchBooks } from './components/SearchBooks';\nimport { MyReads } from './components/MyReads';\nimport './App.css';\n\nclass BooksApp extends Component {\n  state = {\n    idBooks: {},\n    currentlyReading: [],\n    wantToRead: [],\n    read: [],\n  };\n\n  async componentDidMount() {\n    const books = await getAll();\n    const idBooks = {};\n    const shelfs = { currentlyReading: [], wantToRead: [], read: [] };\n    books.forEach((book) => {\n      shelfs[book.shelf].push(book);\n      idBooks[book.id] = book;\n    });\n    this.setState({ ...shelfs, books, idBooks });\n  }\n\n  updateBook = async (book, newShelf, oldShelf) => {\n    const { idBooks } = this.state;\n    await update(book, newShelf);\n    const newBook = await get(book.id);\n    const newIdBooks = idBooks;\n    newIdBooks[book.id] = newBook;\n    this.setState({ idBooks: newIdBooks });\n\n    if (oldShelf !== 'none' && oldShelf !== undefined) {\n      this.setState(({ [oldShelf]: shelf }) => ({\n        [oldShelf]: shelf.filter((item) => item.id !== book.id),\n      }));\n    }\n    if (newShelf !== 'none') {\n      this.setState(({ [newShelf]: shelf }) => ({\n        [newShelf]: [...shelf, newBook],\n      }));\n    }\n  };\n\n  render() {\n    const { currentlyReading, wantToRead, read, idBooks } = this.state;\n    return (\n      <div className=\"app\">\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <MyReads\n              currentlyReading={currentlyReading}\n              wantToRead={wantToRead}\n              read={read}\n              updateBook={this.updateBook}\n            />\n          )}\n        />\n        <Route\n          path=\"/search\"\n          render={() => (\n            <SearchBooks idBooks={idBooks} updateBook={this.updateBook} />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter basePath={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}